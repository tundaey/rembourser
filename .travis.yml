matrix:
  include:
    - language: node.js
      node_js: "12.0"
      before_script:
        - cd api
      cache:
        directories:
          - node_modules
      install:
        - yarn global add serverless
        - travis_retry yarn install
        # - cd ${SERVICE_PATH}
        # - travis_retry yarn install
        # - cd -
      script:
        - travis_retry yarn install
        - yarn run jest
        # - 'if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then
        #     bash bin/deployStaging
        #   fi'
        # - ng build --prod
      deploy:
        provider: script
        skip_cleanup: true
        script: bash bin/deploy
        on:
          all_branches: true
          condition: $TRAVIS_BRANCH =~ ^(master|staging)$
    - language: node.js
      node_js: "12.0"
      before_script:
        - cd webapp
      script:
        - travis_retry yarn install
        - yarn run build
      deploy:
        # provider: script
        # skip_cleanup: true
        # script: bash bin/deploy
        provider: s3
        access_key_id: $AWS_ACCESS_KEY_ID
        secret_access_key: $AWS_SECRET_ACCESS_KEY
        bucket: "app.rembourser.io"
        skip_cleanup: true
        local_dir: dist
        region: $AWS_REGION
        on:
          all_branches: true
          condition: $TRAVIS_BRANCH =~ ^(master|staging)$
      after_deploy:
        - travis-ci-cloudfront-invalidation -a $AWS_ACCESS_KEY_ID -s $AWS_SECRET_ACCESS_KEY -c $DISTRIBUTION_ID -i '/*' -b $TRAVIS_BRANCH -p $TRAVIS_PULL_REQUEST
        # - aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"

# deploy:
#   provider: script
#   skip_cleanup: true
#   script: bash bin/deploy
#   on:
#     all_branches: true
#     condition: $TRAVIS_BRANCH =~ ^(master|staging)$